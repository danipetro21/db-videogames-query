-- SELECT

-- 1- Selezionare tutte le software house americane (3)

SELECT *
FROM software_houses sh
WHERE country LIKE 'United%'

-- 2- Selezionare tutti i giocatori della città di 'Rogahnland' (2)

SELECT *
FROM players p 
WHERE city = 'Rogahnland'

-- 3- Selezionare tutti i giocatori il cui nome finisce per "a" (220)

SELECT *
FROM players p 
WHERE name LIKE '%a'

-- 4- Selezionare tutte le recensioni scritte dal giocatore con ID = 800 (11)

SELECT *
FROM reviews r 
WHERE player_id = 800


-- 5- Contare quanti tornei ci sono stati nell'anno 2015 (9)

SELECT *
FROM tournaments t 
WHERE `year` = 2015


-- 6- Selezionare tutti i premi che contengono nella descrizione la parola 'facere' (2)

SELECT *
FROM awards a 
WHERE description LIKE '%facere%'

-- 7- Selezionare tutti i videogame che hanno la categoria 2 (FPS) o 6 (RPG), mostrandoli una sola volta (del videogioco vogliamo solo l'ID) (287)

SELECT DISTINCT videogame_id  
FROM category_videogame cv 
WHERE category_id = 2 OR category_id = 6


-- 8- Selezionare tutte le recensioni con voto compreso tra 2 e 4 (2947)

SELECT *
FROM reviews r 
WHERE rating >= 2 AND rating <= 4

-- 9- Selezionare tutti i dati dei videogiochi rilasciati nell'anno 2020 (46)

SELECT *
FROM videogames v 
WHERE YEAR (release_date) = 2020

-- 10- Selezionare gli id dei videogame che hanno ricevuto almeno una recensione da 5 stelle, mostrandoli una sola volta (443)

SELECT DISTINCT videogame_id 
FROM reviews
WHERE rating = 5

-- *********** BONUS ***********

-- 11- Selezionare il numero e la media delle recensioni per il videogioco con ID = 412 (review number = 12, avg_rating = 3.16 circa)
-- 12- Selezionare il numero di videogame che la software house con ID = 1 ha rilasciato nel 2018 (13)

-- ------------------------------------------------------------------------------------------------------------------------------------------------------------
-- GROUP BY

-- 1- Contare quante software house ci sono per ogni paese (3)

SELECT COUNT(*)
FROM software_houses sh 
GROUP BY country 

-- 2- Contare quante recensioni ha ricevuto ogni videogioco (del videogioco vogliamo solo l'ID) (500)

SELECT COUNT(*) n_recensioni, videogame_id
FROM reviews r 
GROUP BY videogame_id 

-- 3- Contare quanti videogiochi hanno ciascuna classificazione PEGI (della classificazione PEGI vogliamo solo l'ID) (13)

SELECT COUNT(plv.videogame_id) n_videogame, pl.name 
FROM pegi_label_videogame plv
JOIN videogames v ON v.id = plv.id 
JOIN pegi_labels pl ON pl.id = plv.id
GROUP BY pl.name

-- 4- Mostrare il numero di videogiochi rilasciati ogni anno (11)

SELECT COUNT(*)
FROM videogames v 
GROUP BY YEAR (release_date)

-- 5- Contare quanti videogiochi sono disponbiili per ciascun device (del device vogliamo solo l'ID) (7)

SELECT COUNT(videogame_id)
FROM device_videogame dv 
GROUp BY device_id  

-- 6- Ordinare i videogame in base alla media delle recensioni (del videogioco vogliamo solo l'ID) (500)

SELECT AVG(rating) media, videogame_id  
FROM reviews r
GROUP BY videogame_id 

-- ------------------------------------------------------------------------------------------------------------------------------------------------------------
-- JOIN

-- 1- Selezionare i dati di tutti giocatori che hanno scritto almeno una recensione, mostrandoli una sola volta (996)

SELECT DISTINCT p.*
FROM reviews r 
JOIN players p ON p.id = r.player_id 

-- 2- Sezionare tutti i videogame dei tornei tenuti nel 2016, mostrandoli una sola volta (226)

SELECT DISTINCT v.*
FROM tournament_videogame tv 
JOIN videogames v ON v.id = tv.videogame_id 
JOIN tournaments t ON t.id = tv.tournament_id 
WHERE t.`year` = 2016

-- 3- Mostrare le categorie di ogni videogioco (1718)

SELECT c.name cat_name, v.id id_videogame, v.name
FROM category_videogame cv 
JOIN videogames v ON v.id = cv.videogame_id 
JOIN categories c On c.id = cv.category_id 
GROUP BY cv.id 

-- 4- Selezionare i dati di tutte le software house che hanno rilasciato almeno un gioco dopo il 2020, mostrandoli una sola volta (6)

SELECT DISTINCT sh.*
FROM software_houses sh 
JOIN videogames v ON v.software_house_id  = sh.id
where YEAR(v.release_date) > 2020

-- 5- Selezionare i premi ricevuti da ogni software house per i videogiochi che ha prodotto (55)

SELECT sh.name , a.name
FROM award_videogame av  
JOIN videogames v ON v.id = av.videogame_id 
JOIN awards a ON a.id = av.award_id 
JOIN software_houses sh ON sh.id = v.software_house_id 

-- 6- Selezionare categorie e classificazioni PEGI dei videogiochi che hanno ricevuto recensioni da 4 e 5 stelle, mostrandole una sola volta (3363)

SELECT DISTINCT pl.name , c.name, v.id
FROM category_videogame cv 
JOIN videogames v ON v.id = cv.videogame_id 
JOIN pegi_label_videogame plv ON plv.videogame_id = v.id 
JOIN pegi_labels pl ON pl.id = plv.pegi_label_id 
JOIN categories c ON c.id = cv.category_id 
JOIN reviews r ON r.videogame_id = v.id 
WHERE r.rating = 4 OR r.rating = 5


-- 7- Selezionare quali giochi erano presenti nei tornei nei quali hanno partecipato i giocatori il cui nome inizia per 'S' (474)

SELECT DISTINCT v.name videogame, v.id
FROM videogames v 
JOIN tournament_videogame tv ON tv.videogame_id = v.id 
JOIN tournaments t ON t.id = tv.tournament_id 
JOIN player_tournament pt ON pt.tournament_id = t.id 
JOIN players p ON p.id = pt.player_id 
WHERE p.name LIKE 'S%'

-- 8- Selezionare le città in cui è stato giocato il gioco dell'anno del 2018 (36)

SELECT DISTINCT t.city 
FROM award_videogame av 
JOIN videogames v ON v.id = av.videogame_id 
JOIN tournament_videogame tv ON tv.videogame_id = v.id 
JOIN tournaments t ON t.id = tv.tournament_id 
WHERE av.`year` = 2018

-- 9- Selezionare i giocatori che hanno giocato al gioco più atteso del 2018 in un torneo del 2019 (3306)

SELECT * 
FROM players p 
JOIN player_tournament pt ON pt.player_id = p.id
JOIN tournaments t ON t.id = pt.tournament_id 
JOIN tournament_videogame tv ON tv.tournament_id = pt.tournament_id 
JOIN videogames v ON v.id = tv.videogame_id 
JOIN award_videogame av ON av.videogame_id = v.id
JOIN awards a ON a.id = av.award_id 
WHERE a.name LIKE 'Gioco più%' AND av.year = 2018 AND t.`year` = 2019



-- *********** BONUS ***********

-- 10- Selezionare i dati della prima software house che ha rilasciato un gioco, assieme ai dati del gioco stesso (software house id : 5)
-- 11- Selezionare i dati del videogame (id, name, release_date, totale recensioni) con più recensioni (videogame id : potrebbe uscire 449 o 398, sono entrambi a 20)
-- 12- Selezionare la software house che ha vinto più premi tra il 2015 e il 2016 (software house id : potrebbe uscire 3 o 1, sono entrambi a 3)
-- 13- Selezionare le categorie dei videogame i quali hanno una media recensioni inferiore a 1.5 (10)
